/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_cn_czj_Crypto */

#ifndef _Included_com_cn_czj_Crypto
#define _Included_com_cn_czj_Crypto
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_ECC_GenPrivateKey
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cn_czj_Crypto_CZJ_1ECC_1GenPrivateKey
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_ECC_GenPublicKey
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cn_czj_Crypto_CZJ_1ECC_1GenPublicKey
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_ECC_GetPublicKey_X
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cn_czj_Crypto_CZJ_1ECC_1GetPublicKey_1X
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_ECC_GetPublicKey_Y
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cn_czj_Crypto_CZJ_1ECC_1GetPublicKey_1Y
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_ECC_GetPublicKeyByXY
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cn_czj_Crypto_CZJ_1ECC_1GetPublicKeyByXY
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_GeneratePEMKeys
 * Signature: ([B[BI)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1GeneratePEMKeys
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_GenPublicKey
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1GenPublicKey
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_GenPrivateKey
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1GenPrivateKey
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_EncryptByPublicKey
 * Signature: ([BI[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1EncryptByPublicKey
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_DecryptByPrivateKey
 * Signature: ([BI[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1DecryptByPrivateKey
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_EncryptByPrivateKey
 * Signature: ([BI[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1EncryptByPrivateKey
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_DecryptByPublicKey
 * Signature: ([BI[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1DecryptByPublicKey
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_SignByPrivateKey
 * Signature: ([BI[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1SignByPrivateKey
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_RSA_VerifyByPublicKey
 * Signature: ([BI[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_cn_czj_Crypto_CZJ_1RSA_1VerifyByPublicKey
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_SHA1_Hash
 * Signature: ([BI[B)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1SHA1_1Hash
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_SHA256_Hash
 * Signature: ([BI[B)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1SHA256_1Hash
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_AES_GenerateKey
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cn_czj_Crypto_CZJ_1AES_1GenerateKey
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_AES_EncryptByKey
 * Signature: ([BI[BLjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1AES_1EncryptByKey
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jstring, jint);

/*
 * Class:     com_cn_czj_Crypto
 * Method:    CZJ_AES_DecryptByKey
 * Signature: ([BI[BLjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_cn_czj_Crypto_CZJ_1AES_1DecryptByKey
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jstring, jint);

JNIEXPORT jbyteArray JNICALL
Java_com_cn_czj_Crypto_hmacSha256(JNIEnv *, jobject , jbyteArray _);

#ifdef __cplusplus
}
#endif
#endif
